{"version":3,"file":"static/js/881.99fc5bbd.chunk.js","mappings":"sPAIMA,EAASC,EAAAA,GAAAA,GACTC,EAAUD,EAAAA,GAAAA,G,aCJhB,EAA4B,gCAA5B,EAA2E,mCAA3E,EAAuH,6BAAvH,EAA4J,4BAA5J,EAAwM,oCAAxM,EAAuP,+BAAvP,EAAwS,sC,kBCMlSE,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,0BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAEN,SAASE,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,EFNa,SAAyBH,GACtC,OAAwCI,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,uFACnBZ,EADmB,uBAEtBM,EAAgB,MAFM,iCAMxBE,GAAa,GANW,kBAQCK,EAAAA,EAAAA,IAAA,UAClBlB,EADkB,iBACFK,EADE,oBACiBP,EADjB,oBARD,OAWE,OAHlBqB,EARgB,QAWTC,OACXT,EAAgBQ,EAASE,MAEzBN,EAAS,iCAdW,kDAiBtBA,EAAS,KAAIO,SAjBS,QAmBxBT,GAAa,GAnBW,0DAAH,qDAsBvBI,GACD,GAAE,CAACZ,IAEG,CAAEK,aAAAA,EAAcE,UAAAA,EAAWE,MAAAA,EACnC,CE1B4CS,CAAgBlB,GAAnDK,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,UAAWE,EAAjC,EAAiCA,MAE3BU,EAAc,SAACC,GACnBlB,EAAS,WAAD,OAAYF,EAAZ,YAAuBoB,GAChC,EAED,OAAIb,GACK,gBAAKc,UAAWC,EAAhB,UACH,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAKzDpB,GACK,iBAAKY,UAAWC,EAAhB,oBAAuCb,KAG3CJ,GAKH,iBAAKgB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA4BjB,EAAayB,SACzC,gBACEC,IAAG,UAAKC,EAAAA,GAAAA,IAAL,OAA6B3B,EAAa4B,aAC7CC,IAAK7B,EAAayB,MAClBT,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,0CAAkBjB,EAAa8B,iBAC/B,sCAAc9B,EAAa+B,aAC3B,oCAAY/B,EAAagC,OAAOC,KAAI,SAAAC,GAAK,iBAAQA,EAAMC,KAAd,QACzC,0CAAkBnC,EAAaoC,uBAGnC,iBAAKpB,UAAWC,EAAhB,WACE,mBAAQoB,QAAS,kBAAMvB,EAAY,OAAlB,EAAjB,mBACA,mBAAQuB,QAAS,kBAAMvB,EAAY,UAAlB,EAAjB,yBAEF,gBAAKE,UAAWC,EAAhB,UACE,SAAC,EAAAqB,SAAD,CAAUC,UAAU,0BAClB,SAAC,KAAD,CACArB,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eARvD,UAWE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOgB,KAAK,OAAOC,SAAS,SAAClD,EAAD,CAAMI,QAASA,OAC3C,SAAC,KAAD,CAAO6C,KAAK,UAAUC,SAAS,SAAChD,EAAD,CAASE,QAASA,iBArClD,gBAAKqB,UAAWC,EAAhB,4CA2CV,C","sources":["hooks/fetchMovieDetails.jsx","webpack://react-homework-template/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiData from \"../data/apiData.json\";\n\nconst apiKey = apiData[0].apiKey;\nconst baseUrl = apiData[0].baseUrl;\n\nexport default function useMovieDetails(movieId) {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      if (!movieId) {\n        setMovieDetails(null);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `${baseUrl}movie/${movieId}?api_key=${apiKey}&language=en-US`\n        );\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        } else {\n          setError(\"Error fetching movie details.\");\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__uHDv9\",\"topContainer\":\"MovieDetails_topContainer__mI8Zy\",\"header\":\"MovieDetails_header__fyMx1\",\"image\":\"MovieDetails_image__X2-pj\",\"textContainer\":\"MovieDetails_textContainer__tjy0N\",\"controls\":\"MovieDetails_controls__Zto3N\",\"bottomContainer\":\"MovieDetails_bottomContainer__RrM84\"};","import React, { lazy, Suspense } from \"react\";\nimport useMovieDetails from \"../../hooks/fetchMovieDetails\";\nimport { useParams, useNavigate, Routes, Route } from \"react-router-dom\";\nimport apiInfo from \"../../data/apiData.json\";\nimport css from \"./MovieDetails.module.css\";\nimport { ColorRing } from \"react-loader-spinner\";\n\nconst Cast = lazy(() => import(\"./cast/Cast\"));\nconst Reviews = lazy(() => import(\"./reviews/Reviews\"));\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const { movieDetails, isLoading, error } = useMovieDetails(movieId);\n\n  const handleClick = (view) => {\n    navigate(`/movies/${movieId}/${view}`);\n  };\n\n  if (isLoading) {\n    return <div className={css.container}>\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\n      />\n    </div>;\n  }\n\n  if (error) {\n    return <div className={css.container}>Error: {error}</div>;\n  }\n\n  if (!movieDetails) {\n    return <div className={css.container}>Select a movie to view details.</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <div className={css.topContainer}>\n        <h1 className={css.header}>{movieDetails.title}</h1>\n        <img\n          src={`${apiInfo[0].posterPath}${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          className={css.image}\n        />\n        <div className={css.textContainer}>\n          <p>Release Date: {movieDetails.release_date}</p>\n          <p>Overview: {movieDetails.overview}</p>\n          <p>Genres: {movieDetails.genres.map(genre => ` ${genre.name}`)}</p>\n          <p>Vote Average: {movieDetails.vote_average}</p>\n        </div>\n      </div>\n      <div className={css.controls}>\n        <button onClick={() => handleClick(\"cast\")}>Cast</button>\n        <button onClick={() => handleClick(\"reviews\")}>Reviews</button>\n      </div>\n      <div className={css.bottomContainer}>\n        <Suspense fallback={<div>\n          <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\n        />\n        </div>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n"],"names":["apiKey","apiData","baseUrl","Cast","lazy","Reviews","MovieDetails","movieId","useParams","navigate","useNavigate","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","useEffect","fetchMovieDetails","axios","response","status","data","message","useMovieDetails","handleClick","view","className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","title","src","apiInfo","poster_path","alt","release_date","overview","genres","map","genre","name","vote_average","onClick","Suspense","fallback","path","element"],"sourceRoot":""}