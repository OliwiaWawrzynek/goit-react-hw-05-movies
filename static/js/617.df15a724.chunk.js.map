{"version":3,"file":"static/js/617.df15a724.chunk.js","mappings":"+PAIMA,EAASC,EAAAA,GAAAA,GACTC,EAAUD,EAAAA,GAAAA,G,YCJhB,EAA4B,0BAA5B,EAA+D,uBAA/D,EAA8F,sBAA9F,EAA2H,qBAA3H,EAA2J,yB,kBCM5I,SAASE,IACtB,OAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,EFFa,SAAyBC,GAEtC,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,uFACdT,EADc,uBAEjBG,EAAU,IAFO,iCAMnBE,GAAa,GANM,kBAQMK,EAAAA,EAAAA,IAAA,UAClBf,EADkB,gCACaF,EADb,4DACuEO,IAT7E,OAWO,OAHlBW,EARW,QAWJC,OACXT,EAAUQ,EAASE,KAAKC,SAExBP,EAAS,+BAdM,kDAiBjBA,EAAS,KAAIQ,SAjBI,QAmBnBV,GAAa,GAnBM,0DAAH,qDAsBZW,EAAkBC,YAAW,WACjCR,GACD,GAAE,KAEH,OAAO,kBAAMS,aAAaF,EAAnB,CACR,GAAE,CAAChB,IAEG,CAAEE,OAAAA,EAAQE,UAAAA,EAAWE,MAAAA,EAC7B,CEnCsCa,CAAgBrB,GAA7CI,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,UAAWE,EAA3B,EAA2BA,MAanBc,GAJOC,EAAAA,EAAAA,UACb,kBAAMC,OAAOC,aAAP,OAAuBzB,GAA7B,GACA,CAACA,IAEKsB,MAMR,OAAIhB,GAEA,gBAAKoB,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAMzD1B,GACK,qCAAaA,MAIpB,iBAAKkB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,4BACA,iBAAMQ,SA3BW,SAACC,GACpBA,EAAEC,gBACH,EAyBG,UACE,kBACEX,UAAWC,EACXW,KAAK,OACLC,MAAOjB,EACPkB,SA7Ca,SAACJ,GACpB,IAAMG,EAAQH,EAAEK,OAAOF,MACvBtC,EAAgB,CACdqB,MAAOiB,GAEV,EA0COG,YAAY,4BAGhB,eAAIhB,UAAWC,EAAf,SACGvB,EAAOuC,KAAI,SAACrB,GAAD,OACV,eAAmBI,UAAWC,EAA9B,UACE,SAAC,KAAD,CAAMiB,GAAE,kBAAatB,EAAMuB,IAA3B,SAAkCvB,EAAMwB,SADjCxB,EAAMuB,GADL,QAQnB,C","sources":["hooks/searchMovies.jsx","webpack://react-homework-template/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiData from \"../data/apiData.json\";\n\nconst apiKey = apiData[0].apiKey;\nconst baseUrl = apiData[0].baseUrl;\n\n\nexport default function useSearchMovies(query) {\n \n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      if (!query) {\n        setMovies([]);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `${baseUrl}search/movie?api_key=${apiKey}&language=en-US&page=1&include_adult=false&query=${query}`\n        );\n        if (response.status === 200) {\n          setMovies(response.data.results);\n        } else {\n          setError(\"Error searching for movies.\");\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n\n    const delayDebounceFn = setTimeout(() => {\n      searchMovies();\n    }, 1000);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [query]);\n\n  return { movies, isLoading, error };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__nrZs1\",\"header\":\"Movies_header__wqnuN\",\"input\":\"Movies_input__+JkfI\",\"list\":\"Movies_list__nhUXd\",\"listItem\":\"Movies_listItem__NG5ok\",\"button\":\"Movies_button__+2NGv\"};","import useSearchMovies from \"../../hooks/searchMovies\";\nimport { Link } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\nimport { ColorRing } from \"react-loader-spinner\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useMemo } from \"react\";\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams(\"\");\n\n  const { movies, isLoading, error } = useSearchMovies(searchParams);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setSearchParams({\n      movie: value\n    })\n  };\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  )\n  const { movie } = params;\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  if (isLoading) {\n    return (\n      <div className={css.container}>\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\n        />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.header}>Search Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          value={movie}\n          onChange={handleChange}\n          // {handleChange}\n          placeholder=\"Search for movies...\"\n        />\n      </form>\n      <ul className={css.list}>\n        {movies.map((movie) => (\n          <li key={movie.id} className={css.listItem}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["apiKey","apiData","baseUrl","Movies","useSearchParams","searchParams","setSearchParams","query","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","searchMovies","axios","response","status","data","results","message","delayDebounceFn","setTimeout","clearTimeout","useSearchMovies","movie","useMemo","Object","fromEntries","className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","map","to","id","title"],"sourceRoot":""}